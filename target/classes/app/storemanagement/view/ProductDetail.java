package app.storemanagement.view;

import app.storemanagement.controller.ProductCtrl;
import app.storemanagement.model.CategoryModel;
import app.storemanagement.model.Connection.DBConnection;
import app.storemanagement.model.ProductModel;
import app.storemanagement.utils.Util;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Hung Pham
 */
public class ProductDetail extends javax.swing.JFrame {
    private int id = Integer.parseInt(Util.tmpID);
    /**
     * Creates new form ProductDetail
     */
    public ProductDetail() {
        initComponents();
        getCategories();
        productID.setText(Util.tmpID);
        initShowPage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel41 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        hsd = new com.toedter.calendar.JDateChooser();
        jLabel40 = new javax.swing.JLabel();
        qtyInStock = new javax.swing.JTextField();
        des = new javax.swing.JTextField();
        unitPrice = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        entryDate = new com.toedter.calendar.JDateChooser();
        nsx = new com.toedter.calendar.JDateChooser();
        jLabel49 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        productID = new javax.swing.JTextField();
        cateCb = new javax.swing.JComboBox<>();
        jLabel45 = new javax.swing.JLabel();
        productName = new javax.swing.JTextField();
        topLabel = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thông tin sản phẩm");
        setResizable(false);

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(76, 149, 108));
        jLabel41.setText("Miêu tả");

        jLabel46.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(76, 149, 108));
        jLabel46.setText("Số lượng trong kho");

        hsd.setEnabled(false);

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(76, 149, 108));
        jLabel40.setText("Tên SP");

        qtyInStock.setEditable(false);

        des.setEditable(false);

        unitPrice.setEditable(false);

        jLabel47.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(76, 149, 108));
        jLabel47.setText("ID");

        entryDate.setEnabled(false);

        nsx.setEnabled(false);

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(76, 149, 108));
        jLabel49.setText("HSD");

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(76, 149, 108));
        jLabel43.setText("Ngày nhập");

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(76, 149, 108));
        jLabel42.setText("Phân loại");

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(76, 149, 108));
        jLabel44.setText("NSX");

        productID.setEditable(false);
        productID.setFocusable(false);

        cateCb.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cateCb.setEnabled(false);

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(76, 149, 108));
        jLabel45.setText("Đơn giá");

        productName.setEditable(false);

        topLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        topLabel.setForeground(new java.awt.Color(76, 149, 108));
        topLabel.setText("Chi tiết sản phẩm");

        editBtn.setBackground(new java.awt.Color(76, 149, 108));
        editBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("Sửa");
        editBtn.setBorder(null);
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtnMouseClicked(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(76, 149, 108));
        saveBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Lưu");
        saveBtn.setBorder(null);
        saveBtn.setEnabled(false);
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(productID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(topLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jLabel44))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(entryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nsx, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productName)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41)
                            .addComponent(des, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel49)
                            .addComponent(hsd, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cateCb, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42)
                            .addComponent(jLabel46)
                            .addComponent(qtyInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(topLabel)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel42)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cateCb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hsd, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(jLabel41)
                            .addComponent(jLabel43)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nsx, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(qtyInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(des, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void initShowPage() {
        Date today = new Date();
        try {
            // Thực hiện truy vấn SQL để lấy tất cả các thông tin của sản phẩm
            String query = "SELECT * FROM Product inner join Category ON Category.Category_ID = Product.Category_ID WHERE Product_ID = ?";
            Connection conn = DBConnection.getConnection();
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int categoryId = rs.getInt("Category_ID");
                double unitP = rs.getDouble("Unit_Price");
                int quantityInStock = rs.getInt("Quantity_In_Stock");
                String description = rs.getString("Description");
                Date manufactureDate = rs.getDate("Manufacture_Date");
                Date expiryDate = rs.getDate("Expiry_Date");
                Date entry = rs.getDate("Entry_Date");
                String name = rs.getString("Product_Name");
                DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) cateCb.getModel();
                String cateName = rs.getString("Category_Name");
                productName.setText(name);
                unitPrice.setText(String.valueOf(unitP));
                cateCb.setSelectedIndex(comboBoxModel.getIndexOf(new CategoryModel(categoryId, cateName)));
                qtyInStock.setText(String.valueOf(quantityInStock));
                des.setText(description);
                nsx.setDate(manufactureDate);
                hsd.setDate(expiryDate);
                entryDate.setDate(entry);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void editBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseClicked
        topLabel.setText("Cập nhật thông tin");
        productName.setEditable(true);
        unitPrice.setEditable(true);
        des.setEditable(true);
        qtyInStock.setEditable(true);
        nsx.setEnabled(true);
        hsd.setEnabled(true);
        entryDate.setEnabled(true);
        cateCb.setEnabled(true);
        saveBtn.setEnabled(true);
    }//GEN-LAST:event_editBtnMouseClicked

    private void saveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseClicked
       try {
                String name = productName.getText();
                CategoryModel categoryItem = (CategoryModel) cateCb.getSelectedItem();
                int categoryId = categoryItem.getId();
                double unitP = Double.parseDouble(unitPrice.getText());
                int quantityInStock = Integer.parseInt(qtyInStock.getText());
                String description = des.getText();
                Date manufactureDate = nsx.getDate();
                Date expiryDate = hsd.getDate();
                Date entry = entryDate.getDate();
                if (name.isEmpty() || quantityInStock < 0 || unitP < 0 || manufactureDate == null || expiryDate == null || entry == null) {
                    JOptionPane.showMessageDialog(null, "Thông tin không hợp lệ");
                } else {
                    if (Util.checkDate(manufactureDate, expiryDate, entry) == true) {
                        ProductModel product = new ProductModel(id, name, categoryId, unitP, quantityInStock, description, manufactureDate, expiryDate, entry);
                        ProductCtrl tmp = new ProductCtrl(DBConnection.getConnection());
                        int response = JOptionPane.showConfirmDialog(null, "Bạn có muốn cập nhật sản phẩm này?", "Alert",
                                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (response == JOptionPane.YES_OPTION) {
                            boolean success = tmp.update(product);
                            if (success) {
                                JOptionPane.showMessageDialog(null, "Đã cập nhật sản phẩm");
                            }
                        }
                    }
                    this.dispose();
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_saveBtnMouseClicked
    private void getCategories() {
        try {
            Connection conn = DBConnection.getConnection();
            Statement St = conn.createStatement();
            ResultSet Rs = St.executeQuery("SELECT * FROM Category");

            // Tạo một DefaultComboBoxModel để lưu trữ các mục category
            DefaultComboBoxModel<CategoryModel> model = new DefaultComboBoxModel<>();

            while (Rs.next()) {
                int id = Rs.getInt("Category_ID");
                String name = Rs.getString("Category_Name");
                // Tạo một đối tượng CategoryItem và thêm nó vào model
                model.addElement(new CategoryModel(id, name));
            }

            // Đặt model cho ComboBox
            cateCb.setModel(model);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<CategoryModel> cateCb;
    private javax.swing.JTextField des;
    private javax.swing.JButton editBtn;
    private com.toedter.calendar.JDateChooser entryDate;
    private com.toedter.calendar.JDateChooser hsd;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private com.toedter.calendar.JDateChooser nsx;
    private javax.swing.JTextField productID;
    private javax.swing.JTextField productName;
    private javax.swing.JTextField qtyInStock;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel topLabel;
    private javax.swing.JTextField unitPrice;
    // End of variables declaration//GEN-END:variables
}
